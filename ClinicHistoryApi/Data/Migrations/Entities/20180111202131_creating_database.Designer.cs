// <auto-generated />
using ClinicHistoryApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace ClinicHistoryApi.Data.Migrations.Entities
{
    [DbContext(typeof(EntitiesDbContext))]
    [Migration("20180111202131_creating_database")]
    partial class creating_database
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("entities")
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ClinicHistoryApi.Entities.Diagnostic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.ToTable("Diagnostic");
                });

            modelBuilder.Entity("ClinicHistoryApi.Entities.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("BirthDate");

                    b.Property<string>("ConsultationReason")
                        .IsRequired();

                    b.Property<string>("ContactPhones")
                        .HasMaxLength(250);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedOn");

                    b.Property<int?>("DiagnosticId");

                    b.Property<string>("Email")
                        .HasMaxLength(250);

                    b.Property<string>("EpidemiologicalBackground");

                    b.Property<string>("FamilyBackground");

                    b.Property<string>("IdentificationNumber")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<string>("Origin")
                        .HasMaxLength(350);

                    b.Property<string>("PathologicalBackground");

                    b.Property<string>("PhysiologicalBackground");

                    b.Property<string>("PrerinatologicalBackground");

                    b.Property<int?>("SocialSecurityId");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50);

                    b.Property<DateTime>("UpdatedOn");

                    b.HasKey("Id");

                    b.HasIndex("DiagnosticId");

                    b.HasIndex("IdentificationNumber");

                    b.HasIndex("LastName");

                    b.HasIndex("Name");

                    b.HasIndex("SocialSecurityId");

                    b.ToTable("Patient");
                });

            modelBuilder.Entity("ClinicHistoryApi.Entities.SocialSecurity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.ToTable("SocialSecurity");
                });

            modelBuilder.Entity("ClinicHistoryApi.Entities.Patient", b =>
                {
                    b.HasOne("ClinicHistoryApi.Entities.Diagnostic", "Diagnostic")
                        .WithMany()
                        .HasForeignKey("DiagnosticId");

                    b.HasOne("ClinicHistoryApi.Entities.SocialSecurity", "SocialSecurity")
                        .WithMany()
                        .HasForeignKey("SocialSecurityId");
                });
#pragma warning restore 612, 618
        }
    }
}
